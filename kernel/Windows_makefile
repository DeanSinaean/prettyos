SOURCES = kernel.asm $(filter-out kernel.asm ,$(wildcard *.asm *.c))
OBJECTS = $(addsuffix .o,$(basename $(SOURCES)))

ASFLAGSOBJ= -O32 -f elf
NASM = ..\_nasm\nasmw
MAKE = ..\_mingw32-make\mingw32-make

CFLAGS= -std=c99 -march=i386 -mtune=i386 -Werror -Wall -O -ffreestanding -fleading-underscore -nostdlib -nostdinc -fno-builtin -fno-stack-protector -Iinclude
CC= i586-elf-gcc

LDFLAGS= -T kernel.ld -Map kernel.map -nostdinc
LD= i586-elf-ld

all: ckernel.sys
	rm -fv *.o
	CreateFloppyImage PrettyOS FloppyImage.bin ../_stage1_bootloader/boot.bin ../_stage2_bootloader/BOOT2.SYS CKERNEL.SYS
	cp -f CKERNEL.SYS A:\CKERNEL.SYS 
	#cmd /c bochs.bxrc

%.o: %.asm
	$(NASM) $(ASFLAGSOBJ) $< -o $@

ckernel.sys: $(OBJECTS)
	$(LD) $(LDFLAGS) $+ -o $@ 

data.asm: initrd.dat	

#    $<		Erste Abhängigkeit
#    $+		Liste aller Abhängigkeiten	
#    $@		Name des Targets
#
#    msys needed for rm, cp 